using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Console_Test.AutoClean
{
    /// <summary>
    /// This Class Cleans Up the Elmah Error XML files stored in the XML Store Directory /App_Data/errors/xmlstore
    /// Certain Situations triggers a clean up.
    /// </summary>
    /// <remarks>
    /// 1. XML Error File is a Duplicate by Error or User.
    /// 2. Delete Files by Date the Error File was made.
    /// 3. The Store Directory is getting full and needs to be clear to free up resources.
    ///
    /// Approach made here is to "Clean as you go" so that a massive batch of deleting files is not needed.
    /// This is made through the DeleteDuplicates and DeleteToSaveSpace functions.
    /// </remarks>
    class CleanUp
    {


        public void DeleteDuplicates()
        {

            deleteRepeatedError();
            deleteDuplicateError();
            deleteDuplicateUserError();

        }


        public void DeleteByDate()
        {

        }


        public void DeleteToSaveSpace()
        {

        }


        /// <summary>
        /// Errors that occur that are duplicates within a very close timeframe.
        /// </summary>
        public void deleteRepeatedError()
        {
            archiveError();
        }





        /// <summary>
        /// Errors that are the same made from different User/User-Agent 
        /// </summary>
        /// <example>
        /// User A, User B, and GoogleBot visits SomePage.cshtml and it generates the exact same error for all Visits that were made.
        /// </example>
        public void deleteDuplicateError()
        {
            archiveError();
        }


        /// <summary>
        /// Errors that are the same and made by the same User/User-Agent
        /// </summary>
        /// <example>
        /// A user keeps visiting the same page or hitting reload generating the same error for the same user repeately.
        /// This can be in multiple session or different visits. 
        /// </example>
        public void deleteDuplicateUserError()
        {
            archiveUser();
        }



        //ToDo: Define "Exact" same Error

        /// <summary>
        /// Takes a duplicate error and record the differences between the error and gets rid of the duplicate information. 
        /// </summary>
        /// <example>
        /// Multiple Users visit Page-2.cshtml it generates the "exact" same error.
        /// Unique information that is recorded would be the Number of times the error happen, and the date time of those errors.
        /// </example>
        /// <returns>
        /// 1. New xml file with the File name of the GuidID ("errorId") of the Error to be Archived saved in the /Archive folder.
        /// 2. Updates an already existing Error with updated information on the new instances of the same error 
        ///    (Update Error Count, adds another Date-Time to the file <datetime>DateTime new error</datetime>).
        /// </returns>
        public void archiveError()
        {

        }

        /// <summary>
        /// Takes duplicate information on a User away and only record unique information about a user. 
        /// </summary>
        /// <example>
        /// User A Vists Page-1.cshtml 5 times and each time generates the "exact" same error.  
        /// Unique information on user would be User-Agent,Cookie, Number of times same error was generated by user, date time of errors, 
        /// and the ErrorID of the (first | latest)? error. 
        /// </example>
        public void archiveUser()
        {

        }



    }
}
